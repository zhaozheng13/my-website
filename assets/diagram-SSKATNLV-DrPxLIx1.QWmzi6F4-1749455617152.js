import{p as t}from"./chunk-4BMEZGHF-Byc923bM.CdS2rBcE-1749455617152.js";import{a as e,r as a,v as r,M as n,L as i,w as s,x as o,a8 as l,R as c,W as d,X as p,Y as u,l as g,ae as h}from"./index.Dw4ooDwm-1749455617152.js";import{p as x}from"./radar-MK3ICKWK-CiNWpY4n.DhpnLwA9-1749455617152.js";import"./_baseUniq-CyBKxUBB.CyZcTB1b-1749455617152.js";import"./min-DKZp8rBd.CfE8nV7X-1749455617152.js";import"./clone-CS7zTRQj.B-55aQLe-1749455617152.js";var m={showLegend:!0,ticks:5,max:null,min:0,graticule:"circle"},$={axes:[],curves:[],options:m},f=structuredClone($),v=u.radar,y=e((()=>d({...v,...p().radar})),"getConfig"),w=e((()=>f.axes),"getAxes"),C=e((()=>f.curves),"getCurves"),M=e((()=>f.options),"getOptions"),b=e((t=>{f.axes=t.map((t=>({name:t.name,label:t.label??t.name})))}),"setAxes"),L=e((t=>{f.curves=t.map((t=>({name:t.name,label:t.label??t.name,entries:T(t.entries)})))}),"setCurves"),T=e((t=>{if(null==t[0].axis)return t.map((t=>t.value));const e=w();if(0===e.length)throw new Error("Axes must be populated before curves for reference entries");return e.map((e=>{const a=t.find((t=>{var a;return(null==(a=t.axis)?void 0:a.$refText)===e.name}));if(void 0===a)throw new Error("Missing entry for axis "+e.label);return a.value}))}),"computeCurveEntries"),k={getAxes:w,getCurves:C,getOptions:M,setAxes:b,setCurves:L,setOptions:e((t=>{var e,a,r,n,i;const s=t.reduce(((t,e)=>(t[e.name]=e,t)),{});f.options={showLegend:(null==(e=s.showLegend)?void 0:e.value)??m.showLegend,ticks:(null==(a=s.ticks)?void 0:a.value)??m.ticks,max:(null==(r=s.max)?void 0:r.value)??m.max,min:(null==(n=s.min)?void 0:n.value)??m.min,graticule:(null==(i=s.graticule)?void 0:i.value)??m.graticule}}),"setOptions"),getConfig:y,clear:e((()=>{c(),f=structuredClone($)}),"clear"),setAccTitle:o,getAccTitle:s,setDiagramTitle:i,getDiagramTitle:n,getAccDescription:r,setAccDescription:a},A=e((e=>{t(e,k);const{axes:a,curves:r,options:n}=e;k.setAxes(a),k.setCurves(r),k.setOptions(n)}),"populate"),O={parse:e((async t=>{const e=await x("radar",t);g.debug(e),A(e)}),"parse")},S=e(((t,e,a,r)=>{const n=r.db,i=n.getAxes(),s=n.getCurves(),o=n.getOptions(),c=n.getConfig(),d=n.getDiagramTitle(),p=l(e),u=j(p,c),g=o.max??Math.max(...s.map((t=>Math.max(...t.entries)))),h=o.min,x=Math.min(c.width,c.height)/2;I(u,i,x,o.ticks,o.graticule),B(u,i,x,c),E(u,i,s,h,g,o.graticule,c),z(u,s,o.showLegend,c),u.append("text").attr("class","radarTitle").text(d).attr("x",0).attr("y",-c.height/2-c.marginTop)}),"draw"),j=e(((t,e)=>{const a=e.width+e.marginLeft+e.marginRight,r=e.height+e.marginTop+e.marginBottom,n=e.marginLeft+e.width/2,i=e.marginTop+e.height/2;return t.attr("viewbox",`0 0 ${a} ${r}`).attr("width",a).attr("height",r),t.append("g").attr("transform",`translate(${n}, ${i})`)}),"drawFrame"),I=e(((t,e,a,r,n)=>{if("circle"===n)for(let i=0;i<r;i++){const e=a*(i+1)/r;t.append("circle").attr("r",e).attr("class","radarGraticule")}else if("polygon"===n){const n=e.length;for(let i=0;i<r;i++){const s=a*(i+1)/r,o=e.map(((t,e)=>{const a=2*e*Math.PI/n-Math.PI/2;return`${s*Math.cos(a)},${s*Math.sin(a)}`})).join(" ");t.append("polygon").attr("points",o).attr("class","radarGraticule")}}}),"drawGraticule"),B=e(((t,e,a,r)=>{const n=e.length;for(let i=0;i<n;i++){const s=e[i].label,o=2*i*Math.PI/n-Math.PI/2;t.append("line").attr("x1",0).attr("y1",0).attr("x2",a*r.axisScaleFactor*Math.cos(o)).attr("y2",a*r.axisScaleFactor*Math.sin(o)).attr("class","radarAxisLine"),t.append("text").text(s).attr("x",a*r.axisLabelFactor*Math.cos(o)).attr("y",a*r.axisLabelFactor*Math.sin(o)).attr("class","radarAxisLabel")}}),"drawAxes");function E(t,e,a,r,n,i,s){const o=e.length,l=Math.min(s.width,s.height)/2;a.forEach(((e,a)=>{if(e.entries.length!==o)return;const c=e.entries.map(((t,e)=>{const a=2*Math.PI*e/o-Math.PI/2,i=F(t,r,n,l);return{x:i*Math.cos(a),y:i*Math.sin(a)}}));"circle"===i?t.append("path").attr("d",R(c,s.curveTension)).attr("class",`radarCurve-${a}`):"polygon"===i&&t.append("polygon").attr("points",c.map((t=>`${t.x},${t.y}`)).join(" ")).attr("class",`radarCurve-${a}`)}))}function F(t,e,a,r){return r*(Math.min(Math.max(t,e),a)-e)/(a-e)}function R(t,e){const a=t.length;let r=`M${t[0].x},${t[0].y}`;for(let n=0;n<a;n++){const i=t[(n-1+a)%a],s=t[n],o=t[(n+1)%a],l=t[(n+2)%a],c={x:s.x+(o.x-i.x)*e,y:s.y+(o.y-i.y)*e},d={x:o.x-(l.x-s.x)*e,y:o.y-(l.y-s.y)*e};r+=` C${c.x},${c.y} ${d.x},${d.y} ${o.x},${o.y}`}return`${r} Z`}function z(t,e,a,r){if(!a)return;const n=3*(r.width/2+r.marginRight)/4,i=3*-(r.height/2+r.marginTop)/4;e.forEach(((e,a)=>{const r=t.append("g").attr("transform",`translate(${n}, ${i+20*a})`);r.append("rect").attr("width",12).attr("height",12).attr("class",`radarLegendBox-${a}`),r.append("text").attr("x",16).attr("y",0).attr("class","radarLegendText").text(e.label)}))}e(E,"drawCurves"),e(F,"relativeRadius"),e(R,"closedRoundCurve"),e(z,"drawLegend");var D={draw:S},P=e(((t,e)=>{let a="";for(let r=0;r<t.THEME_COLOR_LIMIT;r++){const n=t[`cScale${r}`];a+=`\n\t\t.radarCurve-${r} {\n\t\t\tcolor: ${n};\n\t\t\tfill: ${n};\n\t\t\tfill-opacity: ${e.curveOpacity};\n\t\t\tstroke: ${n};\n\t\t\tstroke-width: ${e.curveStrokeWidth};\n\t\t}\n\t\t.radarLegendBox-${r} {\n\t\t\tfill: ${n};\n\t\t\tfill-opacity: ${e.curveOpacity};\n\t\t\tstroke: ${n};\n\t\t}\n\t\t`}return a}),"genIndexStyles"),W=e((t=>{const e=h(),a=p(),r=d(e,a.themeVariables);return{themeVariables:r,radarOptions:d(r.radar,t)}}),"buildRadarStyleOptions"),G={parser:O,db:k,renderer:D,styles:e((({radar:t}={})=>{const{themeVariables:e,radarOptions:a}=W(t);return`\n\t.radarTitle {\n\t\tfont-size: ${e.fontSize};\n\t\tcolor: ${e.titleColor};\n\t\tdominant-baseline: hanging;\n\t\ttext-anchor: middle;\n\t}\n\t.radarAxisLine {\n\t\tstroke: ${a.axisColor};\n\t\tstroke-width: ${a.axisStrokeWidth};\n\t}\n\t.radarAxisLabel {\n\t\tdominant-baseline: middle;\n\t\ttext-anchor: middle;\n\t\tfont-size: ${a.axisLabelFontSize}px;\n\t\tcolor: ${a.axisColor};\n\t}\n\t.radarGraticule {\n\t\tfill: ${a.graticuleColor};\n\t\tfill-opacity: ${a.graticuleOpacity};\n\t\tstroke: ${a.graticuleColor};\n\t\tstroke-width: ${a.graticuleStrokeWidth};\n\t}\n\t.radarLegendText {\n\t\ttext-anchor: start;\n\t\tfont-size: ${a.legendFontSize}px;\n\t\tdominant-baseline: hanging;\n\t}\n\t${P(e,a)}\n\t`}),"styles")};export{G as diagram};
